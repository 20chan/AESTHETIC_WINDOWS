<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAVVSURBVHhe7dNLru0oEEXBN/9JVzVxY+taVgKHT4S0mk4skfwDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApvhv8X4t/dNKQUlaqpX6
        tfRPKwUlaalW6tfSP60UlKSlWqlfS/+0UlCSlmqlfi3900pBSVqqlfq19E8rBSVpqVbq19I/rRSUpKVa
        qV9L/7RS8Ke0NCdVlWaeFJdLS3FSVWnmSXG5tBQnVZVmnhSXS0txUlVp5klxubQUJ1WVZp4Ul0tLcVJV
        aeZJcbm0FCdVlWaeFJdLS3FSVWnmSXG4dOnTepO+6VxVmnlTbC5d6rTepG86V5Vm3hSbS5c6rTfpm85V
        pZk3xebSpU7rTfqmc1Vp5k2xuXSp03qTvulcVZp5U2wuXeq03qRvOleVZt4Um0uXOq036ZvOVaWZN8Xm
        0qVO6036pnNVaeZNsbl0qd16k76ZXFWaeVNsLl1qt96kbyZXlWbeFJtLl9qtN+mbyVWlmTfF5tKldutN
        +mZyVWnmTbG5dKndepO+mVxVmnlTbC5darfepG8mV5Vm3hSbS5farTfpm8lVpZk3xebSpXbrTfpmclVp
        5k2xuXSp3XqTvulcVZqpFptLl9qtN+mbzlWlmWqxuXSp3XqTvulcVZqpFptLl9qtN+mbzlWlmWqxuXSp
        3XqTvulcVZqpFptLl9qtN+mbzlWlmWqxuXSp3XqTvulcVZqpFptLl9qtN+mbzlWlmWqxuXSpJ1WVZqrF
        5tKlnlRVmqkWm0uXelJVaaZabC5d6klVpZlqsbl0qSdVlWaqxebSpZ5UVZqpFptLl3pSVWmmWmwuXepJ
        VaWZarG5dKknVZVmqsXm0qWeVFWaqRabS5d6UlVpplpsLl3qSVWlmWqxuXSpJ1WVZqrF5tKlnlRVmqkW
        m0uXelJVaaZabC5d6klVpZlqcbh06StVlWaqxeXSUqxUVZqpFpdLS7FSVWmmWlwuLcVKVaWZanG5tBQr
        VZVmqsXl0lKsVFWaqRaXS0uxUlVpplpcLi3FSlWlmWrBn9LSzGy0dOZJQUlaqpmNls48KShJSzWz0dKZ
        JwUlaalmNlo686SgJC3VzEZLZ54UlKSlmtlo6cyTgpK0VDMbLZ15UlCSlmpmo6UzTwqGSku3UqOlM2cG
        P5WWcqVGS2fODH4qLeVKjZbOnBn8VFrKlRotnTkz+Km0lCs1WjpzZvBTaSlXarR05szgp9JSrtRo6cyZ
        wU+lpVyp0dKZM4OlpaWd2WjpzJ7B1tJSz2y0dGbPYGtpqWc2WjqzZ7C1tNQzGy2d2TPYWlrqmY2WzuwZ
        bC0t9cxGS2f2DLaWlnpmo6UzewZbS0s9s9HSmT2Do6Wln1lVmvkluFp6FDOrSjO/BFdLj2JmVWnml+Bq
        6VHMrCrN/BJcLT2KmVWlmV+Cq6VHMbOqNPNLcLX0KGZWlWZ+Ca6WHsXMqtLMLwF/SI/m2WjpzC8BBelR
        PRstnfkloCA9qmejpTO/BBSkR/VstHTml4CC9KiejZbO/BJQkB7Vs9HSmV8CCtKjejZaOvNLQEF6VM9G
        S2d+CVhYerRfAjaWHvWXgI2lR/0lYGPpUX8J2Fh61F8CNpYe9ZeAjaVH/SVgY+lRfwnYWHrUz4CDpUf/
        DDhYevTPgIOlR/8MOFh69M+Ag6VH/ww4WHr0z4CDpUf/DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuMK/f/8Di05Y6GjrXnAA
        AAAASUVORK5CYII=
</value>
  </data>
</root>